{"ast":null,"code":"import { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [...state.posts, payload],\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/aryanlak/Desktop/my project/client/src/reducers/post.js"],"names":["ADD_POST","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","initialState","posts","post","loading","error","state","action","type","payload","map","_id","id","likes","filter"],"mappings":"AACA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuDC,YAAvD,QAA2E,kBAA3E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKV,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,UAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHD,QAAAA,KAAK,EAAEI,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKJ,YAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAiBP,IAAD,IACnBA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACG,EAArB,GAA0B,EAAE,GAAGT,IAAL;AAAWU,UAAAA,KAAK,EAAEJ,OAAO,CAACI;AAA1B,SAA1B,GAA8DV,IAD3D,CAFJ;AAKHC,QAAAA,OAAO,EAAE;AALN,OAAP;;AAOJ,SAAKP,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CAAoBX,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaF,OAA1C,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBO,OAAjB,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAlCR;AAoCH","sourcesContent":["\r\nimport { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) =>\r\n                    post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n                ),\r\n                loading: false\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((post) => post._id !== payload),\r\n                loading: false\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, payload],\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}