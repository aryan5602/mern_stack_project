{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryanlak\\\\Desktop\\\\my project\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getAllProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = ({\n  getAllProfiles,\n  profile: {\n    Profiles,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getAllProfiles();\n  }, []);\n  return (\n    /*#__PURE__*/\n\n    /*  <Fragment>\r\n          {loading ? <Spinner /> :\r\n              <Fragment>\r\n                  <h1 className='large text-primary'>Developers</h1>\r\n                  <p className='lead'>\r\n                      <i className='fab fa-connectdevelop'></i>Browse and connect with Developers\r\n                  </p>\r\n                  <div className='profiles'>\r\n                      {\r\n                          Profiles.length > 0 ? (\r\n                              Profiles.map(profile => (\r\n                                  <ProfileItem key={profile._id} profile={profile} />\r\n                              ))\r\n                          ) : (<h4>No profiles Found...</h4>)\r\n                      }\r\n                  </div>\r\n              </Fragment>}\r\n      </Fragment>*/\n    _jsxDEV(Fragment, {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["C:/Users/aryanlak/Desktop/my project/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getAllProfiles","ProfileItem","Profiles","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBG,EAAAA,OAAO,EAAE;AAAED,IAAAA,QAAF;AAAYE,IAAAA;AAAZ;AAA3B,CAAD,KAAwD;AAAA;;AAErER,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA;AAAA;;AACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,YAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAuBH,CA7BD;;GAAME,Q;;KAAAA,Q;AA+BNA,QAAQ,CAACG,SAAT,GAAqB;AACjBL,EAAAA,cAAc,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADd;AAEjBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,OAAO,EAAEO,KAAK,CAACP;AADe,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,QAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport { getAllProfiles } from '../../actions/profile'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Profiles = ({ getAllProfiles, profile: { Profiles, loading } }) => {\r\n\r\n    useEffect(() => {\r\n        getAllProfiles();\r\n    }, []);\r\n\r\n    return (\r\n        /*  <Fragment>\r\n              {loading ? <Spinner /> :\r\n                  <Fragment>\r\n                      <h1 className='large text-primary'>Developers</h1>\r\n                      <p className='lead'>\r\n                          <i className='fab fa-connectdevelop'></i>Browse and connect with Developers\r\n                      </p>\r\n                      <div className='profiles'>\r\n                          {\r\n                              Profiles.length > 0 ? (\r\n                                  Profiles.map(profile => (\r\n                                      <ProfileItem key={profile._id} profile={profile} />\r\n                                  ))\r\n                              ) : (<h4>No profiles Found...</h4>)\r\n                          }\r\n                      </div>\r\n                  </Fragment>}\r\n          </Fragment>*/\r\n        <Fragment>\r\n            hi\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getAllProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(Profiles);\r\n"]},"metadata":{},"sourceType":"module"}