{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CLEAR_PROFILE, DELETE_ACCOUNT, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.data.msg,\n        status: err.response.status\n      }\n    });\n  }\n}; // create or update a profile \n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'profile updated' : 'profile created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.data.msg,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experince Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.data.msg,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.data.msg,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete experience \n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.data.msg,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete experience \n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.data.msg,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be UNDONE!')) {\n    try {\n      const res = await axios.delete('api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert('Your account has been deleted successfully', 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.data.msg,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/aryanlak/Desktop/my project/client/src/actions/profile.js"],"names":["axios","setAlert","CLEAR_PROFILE","DELETE_ACCOUNT","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { CLEAR_PROFILE, DELETE_ACCOUNT, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types';\r\n\r\n// Get current users profile\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.get(\"/api/profile/me\");\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.data.msg, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// create or update a profile \r\n\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'profile updated' : 'profile created', 'success'));\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n\r\n    } catch (err) {\r\n\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.data.msg, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// Add experience\r\n\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Experince Added', 'success'));\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.data.msg, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// Add education\r\n\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Education Added', 'success'));\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.data.msg, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n//Delete experience \r\n\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Experience Deleted', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.data.msg, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//Delete experience \r\n\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Education Deleted', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.data.msg, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n//Delete account and profile\r\n\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n\r\n    if (window.confirm('Are you sure? This cannot be UNDONE!')) {\r\n        try {\r\n            const res = await axios.delete('api/profile');\r\n\r\n            dispatch({ type: CLEAR_PROFILE })\r\n            dispatch({\r\n                type: DELETE_ACCOUNT,\r\n            })\r\n\r\n\r\n            dispatch(setAlert('Your account has been deleted successfully', 'success'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.data.msg, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}