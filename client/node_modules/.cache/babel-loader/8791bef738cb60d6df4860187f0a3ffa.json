{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryanlak\\\\Desktop\\\\my project\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport Link from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  match,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile == null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back To Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/aryanlak/Desktop/my project/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","Profile","match","profile","loading","auth","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA,cAAT;AAAyBI,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAlC;AAAwDC,EAAAA;AAAxD,CAAD,KAAoE;AAAA;;AAEhFV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACG,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEN,CAACR,cAAD,CAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,cACKI,OAAO,IAAI,IAAX,IAAmBC,OAAnB,gBAA6B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA7B,gBACG,QAAC,QAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAfD;;GAAMH,O;;KAAAA,O;AAiBNA,OAAO,CAACO,SAAR,GAAoB;AAChBT,EAAAA,cAAc,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADf;AAEhBP,EAAAA,OAAO,EAAEP,SAAS,CAACe,MAAV,CAAiBD,UAFV;AAGhBL,EAAAA,IAAI,EAAET,SAAS,CAACe,MAAV,CAAiBD;AAHP,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADe;AAE9BE,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFkB,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport { getProfileById } from '../../actions/profile'\r\nimport Link from 'react-router-dom'\r\n\r\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\r\n\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile == null || loading ? <Spinner /> :\r\n                <Fragment>\r\n                    <Link to='/profiles' className='btn btn-light'>Back To Profiles</Link>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile)\r\n"]},"metadata":{},"sourceType":"module"}